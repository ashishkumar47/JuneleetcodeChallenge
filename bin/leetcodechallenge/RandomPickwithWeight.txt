Given an array w of positive integers, where w[i] describes the weight of index i,
write a function pickIndex which randomly picks an index in proportion to its weight.

Note:

1 <= w.length <= 10000
1 <= w[i] <= 10^5
pickIndex will be called at most 10000 times.

Example 1:
Input:
["Solution","pickIndex"]
[[[1]],[]]
Output: [null,0]

Example 2:
Input:
["Solution","pickIndex","pickIndex","pickIndex","pickIndex","pickIndex"]
[[[1,3]],[],[],[],[],[]]
Output: [null,0,1,1,1,0]
Explanation of Input Syntax:

The input is two lists: the subroutines called and their arguments. Solution's constructor has one argument,
the array w. pickIndex has no arguments. Arguments are always wrapped with a list, even if there aren't any.

The idea to solve the problem is finding commutative sum for each index,then pick a random number in the range
of sum and finding the index on which this number lies.

[1,3,4,5,2] => [1,4,8,13,15]

0 -> 1
1-> 2,3,4
2-> 5,6,7,8
3->9,10,11,12,13
4->14,15
suppose we choose a randomNumber, lets say 9.
then the answer will be 3.